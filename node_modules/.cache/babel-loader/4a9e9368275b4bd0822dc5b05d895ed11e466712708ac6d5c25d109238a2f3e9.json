{"ast":null,"code":"var _jsxFileName = \"/Users/chenyudong/Desktop/fhevm-nft-dapp/fhevm-nft-dapp-zama/src/App.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport { motion } from \"framer-motion\";\nimport Confetti from \"react-confetti\";\nimport { useWindowSize } from \"react-use\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CONTRACT_ADDRESS = \"0x55832d181ea2e73c872884b499d8255f72f2e76a\";\nconst ABI = [{\n  inputs: [{\n    internalType: \"address\",\n    name: \"to\",\n    type: \"address\"\n  }, {\n    internalType: \"bytes\",\n    name: \"encryptedMetadata\",\n    type: \"bytes[]\"\n  }],\n  name: \"mintWithEncryptedMetadata\",\n  outputs: [{\n    internalType: \"uint256\",\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}];\nconst NFT_NAME = \"ZamaPuff\";\nconst NFT_DESC = \"这是 ZAMA 吉祥物的 NFT，象征智慧与好奇心，独一无二的数字收藏品。\";\nconst catImage = \"https://i.imgur.com/YUeySct.png\";\nconst SEPOLIA_PARAMS = {\n  chainId: \"0xaa36a7\",\n  chainName: \"Sepolia Test Network\",\n  nativeCurrency: {\n    name: \"Sepolia Ether\",\n    symbol: \"ETH\",\n    decimals: 18\n  },\n  rpcUrls: [\"https://rpc.sepolia.org\"],\n  blockExplorerUrls: [\"https://sepolia.etherscan.io\"]\n};\nlet fheInstance = null;\nfunction App() {\n  _s();\n  const [walletAddress, setWalletAddress] = useState(null);\n  const [showFireworks, setShowFireworks] = useState(false);\n  const [txHash, setTxHash] = useState(null);\n  const [fheReady, setFheReady] = useState(false);\n  const {\n    width,\n    height\n  } = useWindowSize();\n  useEffect(() => {\n    const loadFHE = async () => {\n      try {\n        // 动态 import ESM CDN 版本\n        const {\n          initSDK,\n          createInstance\n        } = await import(\"https://cdn.zama.ai/relayer-sdk-js/0.2.0/relayer-sdk-js.js\");\n        await initSDK();\n\n        // 创建 FHE 实例\n        fheInstance = await createInstance({\n          aclContractAddress: '0x687820221192C5B662b25367F70076A37bc79b6c',\n          kmsContractAddress: '0x1364cBBf2cDF5032C47d8226a6f6FBD2AFCDacAC',\n          inputVerifierContractAddress: '0xbc91f3daD1A5F19F8390c400196e58073B6a0BC4',\n          verifyingContractAddressDecryption: '0xb6E160B1ff80D67Bfe90A85eE06Ce0A2613607D1',\n          verifyingContractAddressInputVerification: '0x7048C39f048125eDa9d678AEbaDfB22F7900a29F',\n          chainId: 11155111,\n          gatewayChainId: 55815,\n          network: window.ethereum,\n          relayerUrl: 'https://relayer.testnet.zama.cloud'\n        });\n        setFheReady(true);\n        console.log(\"Zama SDK 初始化完成\");\n      } catch (err) {\n        console.error(\"加载 Zama SDK 失败:\", err);\n      }\n    };\n    loadFHE();\n  }, []);\n  const shortenAddress = address => address ? address.slice(0, 6) + \"...\" + address.slice(-4) : \"\";\n  const getContract = signer => new ethers.Contract(CONTRACT_ADDRESS, ABI, signer);\n  const connectWallet = async () => {\n    if (!window.ethereum) {\n      alert(\"请安装 MetaMask!\");\n      return;\n    }\n    try {\n      const chainId = await window.ethereum.request({\n        method: \"eth_chainId\"\n      });\n      if (chainId !== SEPOLIA_PARAMS.chainId) {\n        try {\n          await window.ethereum.request({\n            method: \"wallet_switchEthereumChain\",\n            params: [{\n              chainId: SEPOLIA_PARAMS.chainId\n            }]\n          });\n        } catch (switchError) {\n          if (switchError.code === 4902) {\n            await window.ethereum.request({\n              method: \"wallet_addEthereumChain\",\n              params: [SEPOLIA_PARAMS]\n            });\n          } else {\n            throw switchError;\n          }\n        }\n      }\n      const accounts = await window.ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n      setWalletAddress(accounts[0]);\n    } catch (err) {\n      console.error(err);\n      alert(\"连接钱包失败: \" + err.message);\n    }\n  };\n  const disconnectWallet = () => {\n    setWalletAddress(null);\n    setShowFireworks(false);\n    setTxHash(null);\n  };\n  const handleMint = async () => {\n    if (!walletAddress) {\n      alert(\"请先连接钱包\");\n      return;\n    }\n    if (!fheReady) {\n      alert(\"SDK 初始化中，请稍等\");\n      return;\n    }\n    try {\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n      const contract = getContract(signer);\n\n      // 使用 FHEVM SDK 加密 NFT metadata\n      const buffer = fheInstance.createEncryptedInput(CONTRACT_ADDRESS, await signer.getAddress());\n      const encodedText = ethers.toUtf8Bytes(`${NFT_NAME} - ${NFT_DESC}`);\n      for (let i = 0; i < encodedText.length; i++) {\n        buffer.add64(BigInt(encodedText[i]));\n      }\n      const ciphertexts = await buffer.encrypt();\n      const tx = await contract.mintWithEncryptedMetadata(await signer.getAddress(), ciphertexts.handles);\n      setTxHash(tx.hash);\n      setShowFireworks(true);\n    } catch (err) {\n      console.error(err);\n      alert(\"Mint 失败: \" + err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      padding: \"2rem\",\n      position: \"relative\"\n    },\n    children: [showFireworks && /*#__PURE__*/_jsxDEV(Confetti, {\n      width: width,\n      height: height\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        top: \"1rem\",\n        right: \"1rem\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          padding: \"0.3rem 0.8rem\",\n          borderRadius: \"0.5rem\",\n          cursor: \"pointer\"\n        },\n        onClick: walletAddress ? disconnectWallet : connectWallet,\n        children: walletAddress ? shortenAddress(walletAddress) : \"连接钱包\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ZAMA NFT DApp\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: NFT_NAME\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(motion.img, {\n      src: catImage,\n      alt: \"cat\",\n      style: {\n        width: 300,\n        height: 300,\n        borderRadius: \"1rem\"\n      },\n      initial: {\n        opacity: 0,\n        scale: 0.8\n      },\n      animate: {\n        opacity: 1,\n        scale: 1\n      },\n      transition: {\n        duration: 0.5\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        maxWidth: \"400px\",\n        margin: \"0.5rem auto\"\n      },\n      children: NFT_DESC\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), !showFireworks && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"1rem\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          padding: \"0.5rem 1.5rem\",\n          fontSize: \"1rem\",\n          borderRadius: \"0.5rem\",\n          cursor: \"pointer\"\n        },\n        onClick: handleMint,\n        disabled: !walletAddress || !fheReady,\n        children: \"Mint ZAMA-NFT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }, this), showFireworks && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"1rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Mint \\u6210\\u529F\\uFF01\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this), txHash && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u4EA4\\u6613: \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: `https://sepolia.etherscan.io/tx/${txHash}`,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: txHash\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"fkMOqk7anJE7K5SLhjp5OodpCug=\", false, function () {\n  return [useWindowSize];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","ethers","motion","Confetti","useWindowSize","jsxDEV","_jsxDEV","CONTRACT_ADDRESS","ABI","inputs","internalType","name","type","outputs","stateMutability","NFT_NAME","NFT_DESC","catImage","SEPOLIA_PARAMS","chainId","chainName","nativeCurrency","symbol","decimals","rpcUrls","blockExplorerUrls","fheInstance","App","_s","walletAddress","setWalletAddress","showFireworks","setShowFireworks","txHash","setTxHash","fheReady","setFheReady","width","height","loadFHE","initSDK","createInstance","aclContractAddress","kmsContractAddress","inputVerifierContractAddress","verifyingContractAddressDecryption","verifyingContractAddressInputVerification","gatewayChainId","network","window","ethereum","relayerUrl","console","log","err","error","shortenAddress","address","slice","getContract","signer","Contract","connectWallet","alert","request","method","params","switchError","code","accounts","message","disconnectWallet","handleMint","provider","BrowserProvider","getSigner","contract","buffer","createEncryptedInput","getAddress","encodedText","toUtf8Bytes","i","length","add64","BigInt","ciphertexts","encrypt","tx","mintWithEncryptedMetadata","handles","hash","style","textAlign","padding","position","children","fileName","_jsxFileName","lineNumber","columnNumber","top","right","borderRadius","cursor","onClick","img","src","alt","initial","opacity","scale","animate","transition","duration","maxWidth","margin","marginTop","fontSize","disabled","href","target","rel","_c","$RefreshReg$"],"sources":["/Users/chenyudong/Desktop/fhevm-nft-dapp/fhevm-nft-dapp-zama/src/App.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport { motion } from \"framer-motion\";\nimport Confetti from \"react-confetti\";\nimport { useWindowSize } from \"react-use\";\nimport \"./index.css\";\n\nconst CONTRACT_ADDRESS = \"0x55832d181ea2e73c872884b499d8255f72f2e76a\";\nconst ABI = [\n  {\n    inputs: [\n      { internalType: \"address\", name: \"to\", type: \"address\" },\n      { internalType: \"bytes\", name: \"encryptedMetadata\", type: \"bytes[]\" }\n    ],\n    name: \"mintWithEncryptedMetadata\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  }\n];\n\nconst NFT_NAME = \"ZamaPuff\";\nconst NFT_DESC = \"这是 ZAMA 吉祥物的 NFT，象征智慧与好奇心，独一无二的数字收藏品。\";\nconst catImage = \"https://i.imgur.com/YUeySct.png\";\n\nconst SEPOLIA_PARAMS = {\n  chainId: \"0xaa36a7\",\n  chainName: \"Sepolia Test Network\",\n  nativeCurrency: { name: \"Sepolia Ether\", symbol: \"ETH\", decimals: 18 },\n  rpcUrls: [\"https://rpc.sepolia.org\"],\n  blockExplorerUrls: [\"https://sepolia.etherscan.io\"]\n};\n\nlet fheInstance = null;\n\nfunction App() {\n  const [walletAddress, setWalletAddress] = useState(null);\n  const [showFireworks, setShowFireworks] = useState(false);\n  const [txHash, setTxHash] = useState(null);\n  const [fheReady, setFheReady] = useState(false);\n  const { width, height } = useWindowSize();\n\n  useEffect(() => {\n    const loadFHE = async () => {\n      try {\n        // 动态 import ESM CDN 版本\n        const { initSDK, createInstance } = await import(\n          \"https://cdn.zama.ai/relayer-sdk-js/0.2.0/relayer-sdk-js.js\"\n        );\n\n        await initSDK();\n\n        // 创建 FHE 实例\n        fheInstance = await createInstance({\n          aclContractAddress: '0x687820221192C5B662b25367F70076A37bc79b6c',\n          kmsContractAddress: '0x1364cBBf2cDF5032C47d8226a6f6FBD2AFCDacAC',\n          inputVerifierContractAddress: '0xbc91f3daD1A5F19F8390c400196e58073B6a0BC4',\n          verifyingContractAddressDecryption: '0xb6E160B1ff80D67Bfe90A85eE06Ce0A2613607D1',\n          verifyingContractAddressInputVerification: '0x7048C39f048125eDa9d678AEbaDfB22F7900a29F',\n          chainId: 11155111,\n          gatewayChainId: 55815,\n          network: window.ethereum,\n          relayerUrl: 'https://relayer.testnet.zama.cloud',\n        });\n\n        setFheReady(true);\n        console.log(\"Zama SDK 初始化完成\");\n      } catch (err) {\n        console.error(\"加载 Zama SDK 失败:\", err);\n      }\n    };\n\n    loadFHE();\n  }, []);\n\n  const shortenAddress = (address) =>\n    address ? address.slice(0,6) + \"...\" + address.slice(-4) : \"\";\n\n  const getContract = (signer) => new ethers.Contract(CONTRACT_ADDRESS, ABI, signer);\n\n  const connectWallet = async () => {\n    if (!window.ethereum) { alert(\"请安装 MetaMask!\"); return; }\n    try {\n      const chainId = await window.ethereum.request({ method: \"eth_chainId\" });\n      if (chainId !== SEPOLIA_PARAMS.chainId) {\n        try {\n          await window.ethereum.request({\n            method: \"wallet_switchEthereumChain\",\n            params: [{ chainId: SEPOLIA_PARAMS.chainId }]\n          });\n        } catch (switchError) {\n          if(switchError.code === 4902){\n            await window.ethereum.request({\n              method: \"wallet_addEthereumChain\",\n              params: [SEPOLIA_PARAMS]\n            });\n          } else { throw switchError; }\n        }\n      }\n      const accounts = await window.ethereum.request({ method: \"eth_requestAccounts\" });\n      setWalletAddress(accounts[0]);\n    } catch(err) {\n      console.error(err);\n      alert(\"连接钱包失败: \" + err.message);\n    }\n  };\n\n  const disconnectWallet = () => {\n    setWalletAddress(null);\n    setShowFireworks(false);\n    setTxHash(null);\n  };\n\n  const handleMint = async () => {\n    if (!walletAddress) { alert(\"请先连接钱包\"); return; }\n    if (!fheReady) { alert(\"SDK 初始化中，请稍等\"); return; }\n\n    try {\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n      const contract = getContract(signer);\n\n      // 使用 FHEVM SDK 加密 NFT metadata\n      const buffer = fheInstance.createEncryptedInput(CONTRACT_ADDRESS, await signer.getAddress());\n      const encodedText = ethers.toUtf8Bytes(`${NFT_NAME} - ${NFT_DESC}`);\n      for (let i = 0; i < encodedText.length; i++) {\n        buffer.add64(BigInt(encodedText[i]));\n      }\n      const ciphertexts = await buffer.encrypt();\n\n      const tx = await contract.mintWithEncryptedMetadata(\n        await signer.getAddress(),\n        ciphertexts.handles\n      );\n\n      setTxHash(tx.hash);\n      setShowFireworks(true);\n    } catch(err) {\n      console.error(err);\n      alert(\"Mint 失败: \" + err.message);\n    }\n  };\n\n  return (\n    <div style={{ textAlign:\"center\", padding:\"2rem\", position:\"relative\" }}>\n      {showFireworks && <Confetti width={width} height={height} />}\n      <div style={{ position:\"absolute\", top:\"1rem\", right:\"1rem\" }}>\n        <button\n          style={{ padding:\"0.3rem 0.8rem\", borderRadius:\"0.5rem\", cursor:\"pointer\" }}\n          onClick={walletAddress ? disconnectWallet : connectWallet}>\n          {walletAddress ? shortenAddress(walletAddress) : \"连接钱包\"}\n        </button>\n      </div>\n\n      <h1>ZAMA NFT DApp</h1>\n      <h2>{NFT_NAME}</h2>\n\n      <motion.img\n        src={catImage}\n        alt=\"cat\"\n        style={{ width:300, height:300, borderRadius:\"1rem\" }}\n        initial={{ opacity:0, scale:0.8 }}\n        animate={{ opacity:1, scale:1 }}\n        transition={{ duration:0.5 }}\n      />\n\n      <p style={{ maxWidth:\"400px\", margin:\"0.5rem auto\" }}>{NFT_DESC}</p>\n\n      {!showFireworks && (\n        <div style={{ marginTop:\"1rem\" }}>\n          <button\n            style={{ padding:\"0.5rem 1.5rem\", fontSize:\"1rem\", borderRadius:\"0.5rem\", cursor:\"pointer\" }}\n            onClick={handleMint}\n            disabled={!walletAddress || !fheReady}>\n            Mint ZAMA-NFT\n          </button>\n        </div>\n      )}\n\n      {showFireworks && (\n        <div style={{ marginTop:\"1rem\" }}>\n          <h2>Mint 成功！</h2>\n          {txHash && (\n            <p>\n              交易: <a href={`https://sepolia.etherscan.io/tx/${txHash}`} target=\"_blank\" rel=\"noopener noreferrer\">{txHash}</a>\n            </p>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}